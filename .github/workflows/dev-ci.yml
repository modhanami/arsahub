name: Dev CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

env:
  ACTIONS_RUNNER_DEBUG: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ steps.prepare.outputs.image-tags }}
      # Example: image-tags=1-abc123,dev,latest
      relevant-sha: ${{ steps.prepare.outputs.relevant-sha }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Prepare
        id: prepare
        # <CI Build Number>-<Git Commit SHA>
        run: |
          RELEVANT_SHA=${{ github.event.pull_request.head.sha || github.sha }}
          echo "Relevant commit SHA: $RELEVANT_SHA"
          echo "relevant-sha=$RELEVANT_SHA" >> "$GITHUB_OUTPUT"
          
          IMAGE_TAGS=$GITHUB_RUN_NUMBER-$(git rev-parse --short $RELEVANT_SHA)
          echo "image-tags=$IMAGE_TAGS" >> "$GITHUB_OUTPUT"
          echo "Image Tags: $IMAGE_TAGS"

  build-and-push-backend:
    if: false
    permissions:
      packages: write
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build with Gradle
        working-directory: ./backend
        run: |
          gradle jib \
            -Djib.to.tags=${{ needs.prepare.outputs.image-tags }} \
            -Djib.to.auth.username=${{ github.actor }} \
            -Djib.to.auth.password=${{ secrets.GITHUB_TOKEN }}

  build-and-push-database:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare Full Image Names
        id: prepare
        run: |
          DATABASE_IMAGE="ghcr.io/modhanami/arsahub/database"
          echo "image-tags=$(echo ${{ needs.prepare.outputs.image-tags }} | sed "s|\([^,]\+\)|$DATABASE_IMAGE:\1|g")" >> "$GITHUB_OUTPUT"
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./database
          push: true
          tags: ${{ steps.prepare.outputs.image-tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

